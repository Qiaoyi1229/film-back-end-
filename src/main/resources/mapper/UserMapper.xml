<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.film.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.film.entity.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="mail" property="mail" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="head_iamge" property="headIamge" jdbcType="VARCHAR"/>
        <result column="role" property="role" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, password, mail, phone, age, head_iamge, role, create_time
  </sql>

    <select id="findByModel" resultMap="BaseResultMap" parameterType="com.example.film.entity.User">
        SELECT
        *
        FROM
        `user`
        <trim prefix="where" prefixOverrides="AND">
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="name != null and name != '' ">
                AND name = #{name}
            </if>
            <if test="password != null and password !='' ">
                AND password = #{password}
            </if>
            <if test="phone != null">
                AND phone = #{phone}
            </if>
            <if test="role != null">
                AND role = #{role}
            </if>
        </trim>
    </select>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.film.entity.User">
    insert into user (id, name, password, 
      mail, phone, age, head_iamge, 
      role, create_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{mail,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{headIamge,jdbcType=VARCHAR}, 
      #{role,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.example.film.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="mail != null">
                mail,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="headIamge != null">
                head_iamge,
            </if>
            <if test="role != null">
                role,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="mail != null">
                #{mail,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="headIamge != null">
                #{headIamge,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.film.entity.User">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="mail != null">
                mail = #{mail,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="headIamge != null">
                head_iamge = #{headIamge,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.film.entity.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      head_iamge = #{headIamge,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>