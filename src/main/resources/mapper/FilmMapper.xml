<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.film.mapper.FilmMapper">
    <resultMap id="BaseResultMap" type="com.example.film.entity.Film">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="director" property="director" jdbcType="VARCHAR"/>
        <result column="actor" property="actor" jdbcType="VARCHAR"/>
        <result column="details" property="details" jdbcType="VARCHAR"/>
        <result column="length" property="length" jdbcType="VARCHAR"/>
        <result column="film_type" property="filmType" jdbcType="VARCHAR"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
        <result column="release_time" property="releaseTime" jdbcType="TIMESTAMP"/>
        <result column="area_id" property="areaId" jdbcType="INTEGER"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="film_shelves" property="filmShelves" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="resultMap" type="com.example.film.doo.FilmDo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="director" property="director" jdbcType="VARCHAR"/>
        <result column="actor" property="actor" jdbcType="VARCHAR"/>
        <result column="details" property="details" jdbcType="VARCHAR"/>
        <result column="length" property="length" jdbcType="VARCHAR"/>
        <result column="film_type" property="filmType" jdbcType="VARCHAR"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
        <result column="release_time" property="releaseTime" jdbcType="TIMESTAMP"/>
        <result column="area_id" property="areaId" jdbcType="INTEGER"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="film_shelves" property="filmShelves" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="typeName" property="typeName" jdbcType="VARCHAR"/>
        <result column="areaName" property="areaName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, name, director, actor, details, length,film_type, type_id, release_time, area_id, image,
    film_shelves, create_time
  </sql>

    <select id="findByModel" resultMap="resultMap" parameterType="com.example.film.query.FilmQuery">
        SELECT
        film.*,area.name as areaName,types.`name` as typeName
        FROM
        `film`
        LEFT JOIN area ON film.area_id = area.id
        LEFT JOIN types ON film.type_id = types.id
        <trim prefix="where" prefixOverrides="AND">
            <if test="id != null">
                AND film.id = #{id}
            </if>
            <if test="name != null and name != '' ">
                AND film.name LIKE CONCAT(CONCAT('%', #{name}), '%')
            </if>
            <if test="typeId != null ">
                AND film.type_id = #{typeId}
            </if>
            <if test="areaId != null">
                AND film.area_id = #{areaId}
            </if>
            <if test="filmShelves != null">
                AND film.film_shelves = #{filmShelves}
            </if>
            <if test="yearStr != null">
                AND YEAR(film.release_time) = #{yearStr}
            </if>
            <if test="director != null">
                AND film.director LIKE CONCAT(CONCAT('%', #{director}), '%')
            </if>
        </trim>
    </select>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from film
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from film
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.film.entity.Film">
    insert into film (id, name, director, 
      actor, details, length, 
      type_id, release_time, area_id, 
      image, film_shelves, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{director,jdbcType=VARCHAR}, 
      #{actor,jdbcType=VARCHAR}, #{details,jdbcType=VARCHAR}, #{length,jdbcType=VARCHAR}, 
      #{typeId,jdbcType=INTEGER}, #{releaseTime,jdbcType=TIMESTAMP}, #{areaId,jdbcType=INTEGER}, 
      #{image,jdbcType=VARCHAR}, #{filmShelves,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.example.film.entity.Film">
        insert into film
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="director != null">
                director,
            </if>
            <if test="actor != null">
                actor,
            </if>
            <if test="details != null">
                details,
            </if>
            <if test="length != null">
                length,
            </if>
            <if test="filmType != null">
                film_type,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="releaseTime != null">
                release_time,
            </if>
            <if test="areaId != null">
                area_id,
            </if>
            <if test="image != null">
                image,
            </if>
            <if test="filmShelves != null">
                film_shelves,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="director != null">
                #{director,jdbcType=VARCHAR},
            </if>
            <if test="actor != null">
                #{actor,jdbcType=VARCHAR},
            </if>
            <if test="details != null">
                #{details,jdbcType=VARCHAR},
            </if>
            <if test="length != null">
                #{length,jdbcType=VARCHAR},
            </if>
            <if test="filmType != null">
                #{filmType,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="releaseTime != null">
                #{releaseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="areaId != null">
                #{areaId,jdbcType=INTEGER},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="filmShelves != null">
                #{filmShelves,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.film.entity.Film">
        update film
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="director != null">
                director = #{director,jdbcType=VARCHAR},
            </if>
            <if test="actor != null">
                actor = #{actor,jdbcType=VARCHAR},
            </if>
            <if test="details != null">
                details = #{details,jdbcType=VARCHAR},
            </if>
            <if test="length != null">
                length = #{length,jdbcType=VARCHAR},
            </if>
            <if test="filmType != null">
                film_type = #{filmType,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="releaseTime != null">
                release_time = #{releaseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="areaId != null">
                area_id = #{areaId,jdbcType=INTEGER},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="filmShelves != null">
                film_shelves = #{filmShelves,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.film.entity.Film">
    update film
    set name = #{name,jdbcType=VARCHAR},
      director = #{director,jdbcType=VARCHAR},
      actor = #{actor,jdbcType=VARCHAR},
      details = #{details,jdbcType=VARCHAR},
      length = #{length,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      area_id = #{areaId,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      film_shelves = #{filmShelves,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>