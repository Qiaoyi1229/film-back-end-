<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.film.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.example.film.entity.Order">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
        <result column="ticket_code" property="ticketCode" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="time_id" property="timeId" jdbcType="INTEGER"/>
        <result column="total" property="total" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="resultMap" type="com.example.film.doo.OrderDo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
        <result column="ticket_code" property="ticketCode" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="time_id" property="timeId" jdbcType="INTEGER"/>
        <result column="total" property="total" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="filmName" property="filmName" jdbcType="VARCHAR"/>
        <result column="typeName" property="typeName" jdbcType="VARCHAR"/>
        <result column="ageRange" property="ageRange" jdbcType="VARCHAR"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
        <result column="week" property="week" jdbcType="INTEGER"/>
        <result column="filmId" property="filmId" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, order_no, ticket_code,user_id, time_id, total, status, create_time
  </sql>

    <select id="getTotal" resultType="Integer" parameterType="java.lang.Integer">
        SELECT
            SUM( total ) as total
        FROM
            `order`
        WHERE
            `status` = 1
    </select>

    <select id="getByWeek" resultMap="resultMap" parameterType="java.lang.Integer">
        SELECT
        Week(create_time) as week,
        SUM( total ) as total
        FROM
        `order`
        WHERE
        `status` = 1
        GROUP BY Week(create_time)
    </select>

    <select id="ageStatistical" resultMap="resultMap" parameterType="java.lang.Integer">
        SELECT
        age as ageRange,
        count( * ) AS count
        FROM
        (
        SELECT
        CASE

        WHEN USER
        .age &gt; 0
        AND USER.age &lt;= 20 THEN '0-20岁' WHEN USER.age &gt; 20
        AND USER.age &lt;= 40 THEN '20-40岁' WHEN USER.age &gt; 40
        AND USER.age &lt;= 60 THEN
        '40-60岁' ELSE '60岁以上'
        END AS age
        FROM
        `order`
        LEFT JOIN time_table ON `order`.time_id = time_table.id
        LEFT JOIN film ON time_table.film_id = film.id
        LEFT JOIN USER ON `order`.user_id = USER.id
        WHERE
        `order`.`status` = 1 and film.id = #{id}
        ) a
        GROUP BY
        age
    </select>

    <select id="priceStatistical" resultMap="resultMap" parameterType="com.example.film.entity.Order">
        SELECT
            sum( `order`.total ) AS total,
            film.`name` AS filmName
        FROM
            `order`
            LEFT JOIN time_table ON `order`.time_id = time_table.id
            LEFT JOIN film ON time_table.film_id = film.id
        WHERE
            `order`.`status` = 1
        GROUP BY
            film.id
    </select>

    <select id="typeStatistical" resultMap="resultMap" parameterType="com.example.film.entity.Order">
        SELECT
            sum( `order`.total ) as total,
            types.`name` AS typeName
        FROM
            `order`
            LEFT JOIN time_table ON `order`.time_id = time_table.id
            LEFT JOIN film ON time_table.film_id = film.id
            LEFT JOIN types ON film.type_id = types.id
        where `order`.`status` = 1
        GROUP BY
            types.id
    </select>
    <select id="findByModel" resultMap="resultMap" parameterType="com.example.film.entity.Order">
        SELECT
        `order`.*,
        USER.`name` AS userName,
        film.`name` AS filmName,
        film.id as filmId
        FROM
        `order`
        LEFT JOIN USER ON `order`.user_id = USER.id
        LEFT JOIN time_table ON `order`.time_id = time_table.id
        LEFT JOIN film ON time_table.film_id = film.id
        <trim prefix="where" prefixOverrides="AND">
            <if test="id != null">
                AND `order`.id = #{id}
            </if>
            <if test="orderNo != null and orderNo != '' ">
                AND `order`.order_no = #{orderNo}
            </if>
            <if test="status != null">
                AND `order`.status = #{status}
            </if>
            <if test="userId != null">
                AND `order`.user_id = #{userId}
            </if>
            <if test="timeId != null">
                AND `order`.time_id = #{timeId}
            </if>
        </trim>
        order by `order`.create_time desc
    </select>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from `order`
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.film.entity.Order">
    insert into `order` (id, order_no, user_id,
      time_id, total, status, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{timeId,jdbcType=INTEGER}, #{total,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.example.film.entity.Order" useGeneratedKeys="true" keyProperty="id">
        insert into `order`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="ticketCode != null">
                ticket_code,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="timeId != null">
                time_id,
            </if>
            <if test="total != null">
                total,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="ticketCode != null">
                #{ticketCode,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="timeId != null">
                #{timeId,jdbcType=INTEGER},
            </if>
            <if test="total != null">
                #{total,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.film.entity.Order">
        update `order`
        <set>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="timeId != null">
                time_id = #{timeId,jdbcType=INTEGER},
            </if>
            <if test="total != null">
                total = #{total,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.film.entity.Order">
    update `order`
    set order_no = #{orderNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      time_id = #{timeId,jdbcType=INTEGER},
      total = #{total,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>